font(i = 2:3, j =2 , fontname = "Times New Roman") %>% # 第3列，第2，3行为Times New Roman %>%
height(i = 1:4,height = cm2inche(c(1,1,1,1)),part = "body", unit = "cm")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = "black", style = "solid", width = 1), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(align = "center", part = "body") %>% # 表格内对其方式
fontsize(size = 16, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(j =2 , fontname = "宋体") %>%  # 第2列为宋体
font(i = c(1,4), j =2 , fontname = "宋体") %>% # 第3列，第1,4行为宋体
font(i = 2:3, j =2 , fontname = "Times New Roman") %>% # 第3列，第2，3行为Times New Roman %>%
height(i = 1:4,height = cm2inche(c(1,1,1,1)),part = "body", unit = "cm") %>%
width(j = 1:2, width = cm2inche(c(1,3.5,6)) )
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = "black", style = "solid", width = 1), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(align = "center", part = "body") %>% # 表格内对其方式
fontsize(size = 16, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(j =2 , fontname = "宋体") %>%  # 第2列为宋体
font(i = c(1,4), j =2 , fontname = "宋体") %>% # 第3列，第1,4行为宋体
font(i = 2:3, j =2 , fontname = "Times New Roman") %>% # 第3列，第2，3行为Times New Roman %>%
height(i = 1:4,height = cm2inche(c(1,1,1,1)),part = "body", unit = "cm") %>%
width(j = 1:2, width = cm2inche(c(3.5,6)) ) %>% # 每一列的宽度
delete_part(part = "header")
?fp_border
?align
?fontsize
?font
seq_len(nrow(df)
)
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
y_border_style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%  # 第2列为宋体
height(i = seq_len(nrow(df)),height = cm2inche(c(1,1,1,1)),part = "body", unit = "cm") %>%
width(j = seq_len(ncol(df)), width = cm2inche(c(3.5,6)) ) %>% # 每一列的宽度
delete_part(part = "header")
?height
?width
cell_height
stopifnot(length(x) == length(y))
x = c("受检人：","检测日期：","报告日期：","检测项目：")
y = c(human_name, received_date, report_date, term)
stopifnot(length(x) == length(y))
df <- data.frame("Description" = x, "Value" = y)
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
y_border_style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%  # 第2列为宋体
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width,part = "body", unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
?width
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
y_border_style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%  # 第2列为宋体
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
x = c("受检人：","检测日期：","报告日期：","检测项目：")
y = c(human_name, received_date, report_date, term)
y_border_color = "black"
y_border_style = "solid"
y_border_width = 1
x_align = "center"
y_align = "center"
x_fontsize = 16
y_fontsize = 16
font_family_ch = "宋体"
font_family_en = "Times New Roman"
font_family_cs = NULL
cell_height = cm2inche(c(1,1,1,1)) # 数值设置无效。
cell_width = cm2inche(c(3.5,6))
cell_unit = "in"
stopifnot(length(x) == length(y))
df <- data.frame("Description" = x, "Value" = y)
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
y_border_style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%  # 第2列为宋体
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%  # 第2列为宋体
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all")
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body")
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body")
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%  # 第2列为宋体
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit )
?font
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(i = seq_len(nrow(df)), j = seq_len(ncol(df)), fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%  # 第2列为宋体
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(i = seq_len(nrow(df)), j = seq_len(ncol(df)), fontname = font_family_en, cs.family = font_family_cs, hansi.family = font_family_ch, eastasia.family = font_family_ch)
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body")
ft
seq_len(nrow(df))
font_family_en
font_family_cs
font_family_ch
font_family_ch
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(i = seq_len(nrow(df)), j = seq_len(ncol(df)),
#fontname = font_family_en,
cs.family = font_family_cs,
hansi.family = font_family_ch, eastasia.family = font_family_ch) %>%
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
?font
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(i = seq_len(nrow(df)), j = seq_len(ncol(df)),
fontname = font_family_en,
#cs.family = font_family_cs,
hansi.family = font_family_ch, eastasia.family = font_family_ch
) %>%
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
ft
x = c("受检人：","检测日期：","报告日期：","检测项目：")
y = c(human_name, received_date, report_date, term)
y_border_color = "black"
y_border_style = "solid"
y_border_width = 1
x_align = "center"
y_align = "center"
x_fontsize = 16
y_fontsize = 16
font_family_ch = "宋体"
font_family_en = "Times New Roman"
font_family_cs = font_family_en
cell_height = cm2inche(c(1,1,1,1)) # 数值设置无效。
cell_width = cm2inche(c(3.5,6))
cell_unit = "in"
stopifnot(length(x) == length(y))
df <- data.frame("Description" = x, "Value" = y)
ft <- flextable(df) %>% border_remove() %>% set_table_properties(layout = "fixed")
ft <- ft %>%
border(border = fp_border(width = 0,color = "transparent")) %>% # 无边框表格
border(j =2,
border.bottom = fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
font(i = seq_len(nrow(df)), j = seq_len(ncol(df)),
fontname = font_family_en,
cs.family = font_family_cs,
hansi.family = font_family_ch, eastasia.family = font_family_ch
) %>%
height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
delete_part(part = "header")
df
ft
？padding
?padding
library(devtools)
library(officer)
document()
document()
document()
check()
check()
check()
?data
check()
document()
check()
document()
check()
?fp_border
document()
check()
document()
check()
document()
check()
?data
utils::data(font_size_mapping, package = "officerEasy", envir = environment())
utils::data("font_size_mapping", package = "officerEasy", envir = environment())
check()
check()
check()
check()
font_size_mapping <- get("font_size_mapping", envir = asNamespace("officerEasy"))
a <- get("font_size_mapping", envir = asNamespace("officerEasy"))
a
?get
?asNamespace
document()
check()
cell_width
if(length(cell_width) == 1) cell_width <- rep(cell_width, times = ncol(df))
length(cell_width) == 1
cell_width
rep(cell_width, times = ncol(df))
stopifnot(length(cell_width) > 2)
cell_width = cm2inche(c(3.5,6))
stopifnot(length(cell_height) > nrow(df))
nrow(df)
length(cell_height)
stopifnot(length(cell_height) == nrow(df))
?font()
document()
load_all()
?get_infor_with_2_columns
x <- c("姓名", "学校", "年级", "日期")
y <- c("小明", "阳光小学", "三年级", "2024-08-28")
table <- get_infor_with_2_columns(x, y)
read_docx() %>% body_add_flextable(table, align = "center") %>%
print(target = "infor_table_Example1.docx")
?align()
document()
load_all()
pkgload::dev_help('get_infor_with_2_columns')
?get_infor_with_2_columns
x <- c("姓名", "学校", "年级", "日期")
y <- c("小明", "阳光小学", "三年级", "2024-08-28")
table <- get_infor_with_2_columns(x, y)
read_docx() %>% body_add_flextable(table, align = "center") %>%
print(target = "infor_table_Example1.docx")
x <- c("姓名", "学校", "年级", "日期")
y <- c("小明", "阳光小学", "三年级", "2024-08-28")
table <- get_infor_with_2_columns(x, y)
table
x <- c("姓名", "学校", "年级", "日期")
y <- c("小明", "阳光小学", "三年级", "2024-08-28")
table <- get_infor_with_2_columns(x, y)
read_docx() %>% body_add_flextable(table, align = "center") %>%
print(target = "infor_table_Example1.docx")
View(font_size_mapping)
?fp_border
x <- c("姓名", "学校", "年级", "日期")
y <- c("小明", "阳光小学", "三年级", "2024-08-28")
table <- get_infor_with_2_columns(x, y)
read_docx() %>% body_add_flextable(table) %>%
print(target = "infor_table_Example1.docx")
x <- c("姓名", "学校", "年级", "日期")
y <- c("小明", "阳光小学", "三年级", "2024-08-28")
table <- get_infor_with_2_columns(x, y)
read_docx() %>% body_add_flextable(table) %>%
print(target = "infor_table_Example1.docx")
?body_add_flextable
table
table %>% align(align = "justify")
table %>% align(align = "center")
?fp_par
?get_paragraph2
library(officer)
text <- "《黑神话：悟空》是一款由中国游戏公司 Game Science 开发的动作角色扮演游戏（ARPG），灵感来自中国古典名著《西游记》。游戏以孙悟空为主角，结合了传统的中国神话元素和现代游戏设计理念，呈现出一个丰富的开放世界。"
para <- get_paragraph2(text, tab = " ", n_tab = 8)
read_docx() %>% body_add_fpar(para) %>% print("formatted_paragraph.docx")
para <- get_paragraph2(text, tab = " ", n_tab = 8, text_align = "justify")
read_docx() %>% body_add_fpar(para) %>% print("formatted_paragraph.docx")
stopifnot(length(x) == length(y))
df <- data.frame("Description" = x, "Value" = y)
if(length(cell_height) == 1) cell_height <- rep(cell_height, times = nrow(df))
stopifnot(length(cell_height) == nrow(df))
if(length(cell_width) == 1) cell_width <- rep(cell_width, times = ncol(df))
stopifnot(length(cell_width) == ncol(df))
ft <- flextable::flextable(df) %>% flextable::border_remove() %>% flextable::set_table_properties(layout = "fixed")
ft
ft <- ft %>%
flextable::border(border = officer::fp_border(width = 0,color = "transparent")) %>% # 无边框表格
flextable::border(j =2,
border.bottom = officer::fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>%
align(align = "justify")
ft
ft <- flextable::flextable(df) %>% flextable::border_remove() %>% flextable::set_table_properties(layout = "fixed")
ft <- ft %>%
flextable::border(border = officer::fp_border(width = 0,color = "transparent")) %>% # 无边框表格
flextable::border(j =2,
border.bottom = officer::fp_border(color = y_border_color,
style = y_border_style,
width = y_border_width), # 整数，不是英寸
part = "all") %>% # 对第2列表格边框添加
flextable::fontsize(j = 1,size = x_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
flextable::fontsize(j = 2,size = y_fontsize, part = "body") %>% # 表格内字体大小 # 15 小三号；16 三号
flextable::font(i = seq_len(nrow(df)), j = seq_len(ncol(df)),
fontname = font_family_en,
cs.family = font_family_cs,
hansi.family = font_family_ch, eastasia.family = font_family_ch
) %>%
flextable::height(i = seq_len(nrow(df)),height = cell_height,part = "body", unit = cell_unit ) %>%
flextable::width(j = seq_len(ncol(df)), width = cell_width, unit = cell_unit ) %>% # 每一列的宽度
flextable::align(j = 1, align = x_align, part = "body") %>% # 表格内对其方式
flextable::align(j = 2, align = y_align, part = "body") %>% # 表格内对其方式
flextable::padding(padding.top = padding_top, # 单元格内，段落前后间距，左右距离边缘的距离，单位磅
padding.bottom = padding_bottom,
padding.left = padding_left,
padding.right = padding_right,
part = "all") %>%
flextable::delete_part(part = "header")
document()
load_all()
?get_infor_with_2_columns
x <- c("姓名", "学校", "年级", "日期")
y <- c("小明", "阳光小学", "三年级", "2024-08-28")
table <- get_infor_with_2_columns(x, y)
read_docx() %>% body_add_flextable(table, align = "center") %>%
print(target = "infor_table_Example1.docx")
table <- get_infor_with_2_columns(x, y, x_align = "justify")
table
table %>% align(align = "center")
table %>% align(align = "left")
table %>% align(align = "justify")
table %>% align(align = "justify")
table %>% align(align = "left")
table %>% align(align = "center")
library(flextable)
# 创建一个示例数据框
df <- data.frame(
Column1 = c("这是一段非常长的测试文本，用于演示两端对齐效果。请确保文本足够长以便观察对齐情况。",
"This is another long example text to show justified alignment."),
Column2 = c("这是第二列的一些内容。", "Content in the second column.")
)
# 创建 flextable
ft <- flextable(df)
# 尝试设置两端对齐
ft <- align(ft, align = "justify", part = "all")
# 显示 flextable
ft
library(officer)
doc <- read_docx() %>%
body_add_flextable(value = ft) %>%
print(target = "flextable_justified.docx")
document()
check()
check()
load_all()
?get_infor_with_2_columns
?width()
document()
document()
document()
document()
?page_size
?prop_section
document()
?set_page_layout
?page_size
document()
check()
document()
check()
check()
library(devtools)
check()
document()
check()
